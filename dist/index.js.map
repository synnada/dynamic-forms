{"version":3,"file":"index.js","sources":["../src/hooks.ts","../src/appReducer.tsx","../src/store.ts","../src/utils.ts","../src/index.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","/* eslint-disable no-case-declarations */\ntype Action = { type: string; payload: any }\n// type Dispatch = (action: Action) => void\ntype State = {\n  loadingArray: string[]\n  validationSchemaObject: object\n}\n\nconst initialState: State = {\n  loadingArray: [],\n  validationSchemaObject: {}\n}\n\nexport function appReducer(state: State = initialState, action: Action) {\n  switch (action.type) {\n    case 'setLoading':\n      const payload: any = action.payload\n      const draftTracing = [...state.loadingArray]\n      const fieldFoundIndex = draftTracing.indexOf(payload.name)\n      const fieldFound = fieldFoundIndex > -1\n\n      if (payload.value && !fieldFound) {\n        // yükleme başlasın\n        draftTracing.push(payload.name)\n      } else if (!payload.value && fieldFound) {\n        // yükleme duracak\n        draftTracing.splice(fieldFoundIndex, 1)\n      }\n      return {\n        ...state,\n        loadingArray: draftTracing\n      }\n    case 'addValidationSchema':\n      /* const draftObject = { ...state.validationSchemaObject }\n      draftObject[action.payload.name] = action.payload.rules.validationSchema */\n      return {\n        ...state\n        // validationSchemaObject: draftObject\n      }\n  }\n\n  return state\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { appReducer } from './appReducer'\n\nconst store = configureStore({\n  reducer: {\n    app: appReducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n","/* eslint-disable */\n\nexport const deepStringify = (value: any) => {\n  const stringify = (data: any, prefix: any = null): string => {\n    function unicode_escape(c: any) {\n      var s = c.charCodeAt(0).toString(16)\n      while (s.length < 4) s = '0' + s\n      return '\\\\u' + s\n    }\n    if (!prefix) prefix = ''\n    switch (typeof data) {\n      case 'object': // object, array or null\n        if (data == null) return 'null'\n        var i,\n          pieces = [],\n          before,\n          after\n        var indent = prefix + '    '\n        if (data instanceof Array) {\n          for (i = 0; i < data.length; i++)\n            pieces.push(stringify(data[i], indent))\n          before = '[\\n'\n          after = ']'\n        } else {\n          for (i in data) pieces.push(i + ': ' + stringify(data[i], indent))\n          before = '{\\n'\n          after = '}'\n        }\n        return (\n          before + indent + pieces.join(',\\n' + indent) + '\\n' + prefix + after\n        )\n      case 'string':\n        data = data\n          .replace(/\\\\/g, '\\\\\\\\')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/\\n/g, '\\\\n')\n          .replace(/\\r/g, '\\\\r')\n          .replace(/\\t/g, '\\\\t')\n          .replace(/[\\x00-\\x19]/g, unicode_escape)\n        return '\"' + data + '\"'\n      default:\n        return String(data).replace(/\\n/g, '\\n' + prefix)\n    }\n  }\n\n  return stringify(value)\n}\n","/* eslint-disable  */\n// @ts-ignore\nimport * as React from 'react'\n// @ts-ignore\nimport { useFormikContext, useField } from 'formik'\n// @ts-ignore\nimport deepEqual from 'deep-equal'\n// @ts-ignore\nimport * as deepcopy_ from 'deepcopy'\nimport { useAppSelector, useAppDispatch } from './hooks'\nimport store from './store'\nimport { Provider as ReduxProvider } from 'react-redux'\n// @ts-ignore\nimport * as Yup from 'yup'\n// @ts-ignore\nimport SparkMD5 from 'spark-md5'\nimport { deepStringify } from './utils'\n// const deepCopy = deepcopy_\n// import styles from './styles.module.css'\n\n/* interface Props {\n  values: any\n} */\n\ninterface Rules {\n  initialValue?: any\n  fieldProps?: any\n  dependsOn?: any\n  manupilation?: any\n  validationSchema?: any\n}\n\nexport interface FormContextData {\n  getLoading: (name?: string | undefined) => boolean\n  setLoading: (name: string, value: boolean) => void\n}\n\n/* type DynamicFormsProviderProps = { children: any } */\n\nexport const formContextDefaultValue: FormContextData = {\n  getLoading: () => false,\n  setLoading: () => null\n}\n\nexport const FormContext = React.createContext<FormContextData>(\n  formContextDefaultValue\n)\n\nexport const useDynamicForms = () => React.useContext(FormContext)\n\nexport const Provider = ({ children }: any) => {\n  const loadingArray = useAppSelector((state) => state.app.loadingArray)\n  /* const validationSchema = useAppSelector(\n    (state) => state.app.validationSchemaObject\n  ) */\n  const dispatch = useAppDispatch()\n  // NOTE: you *might* need to memoize this value\n  // Learn more in http://kcd.im/optimize-context\n\n  // const [loadingArray, setLoadingArray] = React.useState<string[]>([])\n\n  const setLoading = (name: string, value: boolean) => {\n    dispatch({ type: 'setLoading', payload: { name, value } })\n  }\n\n  const getLoading = React.useCallback(\n    (name?: string) => {\n      if (!name) {\n        return Boolean(loadingArray.length)\n      }\n      return loadingArray[name]\n    },\n    [loadingArray]\n  )\n\n  const contextValue: FormContextData = {\n    setLoading,\n    getLoading\n  }\n\n  return (\n    <FormContext.Provider value={contextValue}>{children}</FormContext.Provider>\n  )\n}\n\nexport const DynamicFormsProvider = (props: any) => (\n  <ReduxProvider store={store}>\n    <Provider {...props} />\n  </ReduxProvider>\n)\n\nexport const withDynamicForms = (rules: Rules) => (Component: any) => {\n  const defaultRules: Rules = {\n    dependsOn: {},\n    fieldProps: {},\n    manupilation: {}\n  }\n  rules = { ...defaultRules, ...rules }\n\n  const WrappedComponent = (props: any) => {\n    const { values, setFieldValue /* setFieldValue, setValues */ }: any =\n      useFormikContext()\n\n    const [, meta] = useField(props.name)\n    const [passed, setPassed] = React.useState<any>(undefined)\n    /* const [manupilationData, setManupilationData] =\n      React.useState<any>(undefined) */\n    // const { setValue } = helpers\n\n    const checkPassed = () =>\n      Object.keys(rules.dependsOn).findIndex((relationName) => {\n        const relationValue = values[relationName]\n        if (relationValue) {\n          if (!rules.dependsOn[relationName]({ values, relationValue })) {\n            return true\n          }\n        } else {\n          return true\n        }\n        return false\n      }) === -1\n\n    const cleanFieldValue = () => {\n      // delete field\n      /* setValues({\n        ...values\n      }) */\n      // setFieldValue(props.name, null)\n      //helpers.setValue(undefined)\n      // setValue(null)\n      console.log(props.name)\n\n      setFieldValue(props.name, undefined)\n      //delete meta.value\n    }\n\n    const checkManupilation = () => {\n      let manupilatedFieldProps = rules?.fieldProps || {}\n      const manupilationKeys = Object.keys(rules.manupilation)\n      for (let index = 0; index < manupilationKeys.length; index++) {\n        const relationName = manupilationKeys[index]\n        const relationPredicate = rules.manupilation[relationName]\n        if (relationPredicate) {\n          const relationValue = values[relationName]\n          const predicateResult = relationPredicate({ values, relationValue })\n\n          if (predicateResult) {\n            manupilatedFieldProps = {\n              ...manupilatedFieldProps,\n              ...predicateResult\n            }\n\n            manupilatedFieldProps.isManupilated = SparkMD5.hash(\n              deepStringify(predicateResult)\n            )\n\n            /* manupilatedFieldProps.manupilated = 'no'\n\n            if (!deepEqual(previousValues[props.name], values[props.name])) {\n              manupilatedFieldProps.manupilated = 'yes'\n            } */\n          } else {\n            /* manupilatedFieldProps.manupilated = undefined */\n          }\n\n          /* manupilatedFieldProps.isManupilated =\n            manupilatedFieldProps?.manupilated &&\n            manupilatedFieldProps?.manupilated === 'yes' */\n        }\n      }\n      return manupilatedFieldProps\n    }\n\n    React.useEffect(() => {\n      const isPassed = checkPassed()\n      if (isPassed) {\n        // Reset value with initialValue\n        if (meta.value === undefined && rules?.initialValue !== undefined) {\n          setFieldValue(props.name, rules.initialValue)\n        }\n        /* if (rules.validationSchema) {\n          dispatch({\n            type: 'addValidationSchema',\n            payload: { rules, name: props.name }\n          })\n        } */\n        setPassed(isPassed)\n      } else {\n        setPassed(undefined)\n        if (meta.value) {\n          cleanFieldValue()\n        }\n      }\n    }, [values])\n\n    /* if (isPassed) {\n      return <Component fieldProps={checkManupilation()} {...props} />\n    } else {\n      if (meta.value) {\n        cleanFieldValue()\n      }\n    } */\n\n    if (passed === undefined) return null\n\n    const fieldProps = {\n      validationSchema: rules.validationSchema || {},\n      ...checkManupilation()\n    }\n\n    return <Component fieldProps={fieldProps} {...props} />\n  }\n\n  return (props: any) =>\n    React.useMemo(() => <WrappedComponent {...props} />, [])\n}\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","loadingArray","validationSchemaObject","appReducer","state","action","type","payload","draftTracing","fieldFoundIndex","indexOf","name","fieldFound","value","push","splice","store","configureStore","reducer","app","deepStringify","stringify","data","prefix","unicode_escape","c","s","charCodeAt","toString","length","i","pieces","before","after","indent","Array","join","replace","String","formContextDefaultValue","getLoading","setLoading","FormContext","React","useDynamicForms","Provider","children","dispatch","Boolean","contextValue","DynamicFormsProvider","props","ReduxProvider","withDynamicForms","rules","Component","defaultRules","dependsOn","fieldProps","manupilation","WrappedComponent","useFormikContext","values","setFieldValue","useField","meta","undefined","passed","setPassed","checkPassed","Object","keys","findIndex","relationName","relationValue","cleanFieldValue","console","log","checkManupilation","manupilatedFieldProps","manupilationKeys","index","relationPredicate","predicateResult","isManupilated","SparkMD5","hash","isPassed","initialValue","validationSchema"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMC,sBAAW,EAAjB;AAAA,CAAvB;AACA,IAAMC,cAAc,GAAoCC,sBAAxD;;ACEP,IAAMC,YAAY,GAAU;AAC1BC,EAAAA,YAAY,EAAE,EADY;AAE1BC,EAAAA,sBAAsB,EAAE;AAFE,CAA5B;AAKA,SAAgBC,WAAWC,OAA6BC;MAA7BD;AAAAA,IAAAA,QAAeJ;;;AACxC,UAAQK,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,UAAMC,OAAO,GAAQF,MAAM,CAACE,OAA5B;AACA,UAAMC,YAAY,aAAOJ,KAAK,CAACH,YAAb,CAAlB;AACA,UAAMQ,eAAe,GAAGD,YAAY,CAACE,OAAb,CAAqBH,OAAO,CAACI,IAA7B,CAAxB;AACA,UAAMC,UAAU,GAAGH,eAAe,GAAG,CAAC,CAAtC;;AAEA,UAAIF,OAAO,CAACM,KAAR,IAAiB,CAACD,UAAtB,EAAkC;AAEhCJ,QAAAA,YAAY,CAACM,IAAb,CAAkBP,OAAO,CAACI,IAA1B;AACD,OAHD,MAGO,IAAI,CAACJ,OAAO,CAACM,KAAT,IAAkBD,UAAtB,EAAkC;AAEvCJ,QAAAA,YAAY,CAACO,MAAb,CAAoBN,eAApB,EAAqC,CAArC;AACD;;AACD,0BACKL,KADL;AAEEH,QAAAA,YAAY,EAAEO;AAFhB;;AAIF,SAAK,qBAAL;AAGE,0BACKJ,KADL;AArBJ;;AA2BA,SAAOA,KAAP;AACD;;ACvCD,IAAMY,KAAK,GAAGC,sBAAc,CAAC;AAC3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAEhB;AADE;AADkB,CAAD,CAA5B;;ACDO,IAAMiB,aAAa,GAAG,SAAhBA,aAAgB,CAACP,KAAD;AAC3B,MAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAYC,MAAZ;QAAYA;AAAAA,MAAAA,SAAc;;;AAC1C,aAASC,cAAT,CAAwBC,CAAxB;AACE,UAAIC,CAAC,GAAGD,CAAC,CAACE,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR;;AACA,aAAOF,CAAC,CAACG,MAAF,GAAW,CAAlB;AAAqBH,QAAAA,CAAC,GAAG,MAAMA,CAAV;AAArB;;AACA,aAAO,QAAQA,CAAf;AACD;;AACD,QAAI,CAACH,MAAL,EAAaA,MAAM,GAAG,EAAT;;AACb,YAAQ,OAAOD,IAAf;AACE,WAAK,QAAL;AACE,YAAIA,IAAI,IAAI,IAAZ,EAAkB,OAAO,MAAP;AAClB,YAAIQ,CAAJ;AAAA,YACEC,MAAM,GAAG,EADX;AAAA,YAEEC,MAFF;AAAA,YAGEC,KAHF;AAIA,YAAIC,MAAM,GAAGX,MAAM,GAAG,MAAtB;;AACA,YAAID,IAAI,YAAYa,KAApB,EAA2B;AACzB,eAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGR,IAAI,CAACO,MAArB,EAA6BC,CAAC,EAA9B;AACEC,YAAAA,MAAM,CAACjB,IAAP,CAAYO,SAAS,CAACC,IAAI,CAACQ,CAAD,CAAL,EAAUI,MAAV,CAArB;AADF;;AAEAF,UAAAA,MAAM,GAAG,KAAT;AACAC,UAAAA,KAAK,GAAG,GAAR;AACD,SALD,MAKO;AACL,eAAKH,CAAL,IAAUR,IAAV;AAAgBS,YAAAA,MAAM,CAACjB,IAAP,CAAYgB,CAAC,GAAG,IAAJ,GAAWT,SAAS,CAACC,IAAI,CAACQ,CAAD,CAAL,EAAUI,MAAV,CAAhC;AAAhB;;AACAF,UAAAA,MAAM,GAAG,KAAT;AACAC,UAAAA,KAAK,GAAG,GAAR;AACD;;AACD,eACED,MAAM,GAAGE,MAAT,GAAkBH,MAAM,CAACK,IAAP,CAAY,QAAQF,MAApB,CAAlB,GAAgD,IAAhD,GAAuDX,MAAvD,GAAgEU,KADlE;;AAGF,WAAK,QAAL;AACEX,QAAAA,IAAI,GAAGA,IAAI,CACRe,OADI,CACI,KADJ,EACW,MADX,EAEJA,OAFI,CAEI,IAFJ,EAEU,KAFV,EAGJA,OAHI,CAGI,KAHJ,EAGW,KAHX,EAIJA,OAJI,CAII,KAJJ,EAIW,KAJX,EAKJA,OALI,CAKI,KALJ,EAKW,KALX,EAMJA,OANI,CAMI,cANJ,EAMoBb,cANpB,CAAP;AAOA,eAAO,MAAMF,IAAN,GAAa,GAApB;;AACF;AACE,eAAOgB,MAAM,CAAChB,IAAD,CAAN,CAAae,OAAb,CAAqB,KAArB,EAA4B,OAAOd,MAAnC,CAAP;AA/BJ;AAiCD,GAxCD;;AA0CA,SAAOF,SAAS,CAACR,KAAD,CAAhB;AACD,CA5CM;;ICqCM0B,uBAAuB,GAAoB;AACtDC,EAAAA,UAAU,EAAE;AAAA,WAAM,KAAN;AAAA,GAD0C;AAEtDC,EAAAA,UAAU,EAAE;AAAA,WAAM,IAAN;AAAA;AAF0C,CAAjD;AAKP,IAAaC,WAAW,GAAGC,mBAAA,CACzBJ,uBADyB,CAApB;AAIP,IAAaK,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAMD,gBAAA,CAAiBD,WAAjB,CAAN;AAAA,CAAxB;AAEP,IAAaG,QAAQ,GAAG,SAAXA,QAAW;MAAGC,gBAAAA;AACzB,MAAM7C,YAAY,GAAGH,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACe,GAAN,CAAUlB,YAArB;AAAA,GAAD,CAAnC;AAIA,MAAM8C,QAAQ,GAAGnD,cAAc,EAA/B;;AAMA,MAAM6C,UAAU,GAAG,SAAbA,UAAa,CAAC9B,IAAD,EAAeE,KAAf;AACjBkC,IAAAA,QAAQ,CAAC;AAAEzC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,OAAO,EAAE;AAAEI,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,KAAK,EAALA;AAAR;AAA/B,KAAD,CAAR;AACD,GAFD;;AAIA,MAAM2B,UAAU,GAAGG,iBAAA,CACjB,UAAChC,IAAD;AACE,QAAI,CAACA,IAAL,EAAW;AACT,aAAOqC,OAAO,CAAC/C,YAAY,CAAC4B,MAAd,CAAd;AACD;;AACD,WAAO5B,YAAY,CAACU,IAAD,CAAnB;AACD,GANgB,EAOjB,CAACV,YAAD,CAPiB,CAAnB;AAUA,MAAMgD,YAAY,GAAoB;AACpCR,IAAAA,UAAU,EAAVA,UADoC;AAEpCD,IAAAA,UAAU,EAAVA;AAFoC,GAAtC;AAKA,SACEG,mBAAA,CAACD,WAAW,CAACG,QAAb;AAAsBhC,IAAAA,KAAK,EAAEoC;GAA7B,EAA4CH,QAA5C,CADF;AAGD,CAjCM;AAmCP,IAAaI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD;AAAA,SAClCR,mBAAA,CAACS,mBAAD;AAAepC,IAAAA,KAAK,EAAEA;GAAtB,EACE2B,mBAAA,CAACE,QAAD,oBAAcM,MAAd,CADF,CADkC;AAAA,CAA7B;AAMP,IAAaE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAkB,UAACC,SAAD;AAChD,QAAMC,YAAY,GAAU;AAC1BC,MAAAA,SAAS,EAAE,EADe;AAE1BC,MAAAA,UAAU,EAAE,EAFc;AAG1BC,MAAAA,YAAY,EAAE;AAHY,KAA5B;AAKAL,IAAAA,KAAK,gBAAQE,YAAR,EAAyBF,KAAzB,CAAL;;AAEA,QAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACT,KAAD;AACvB,8BACEU,uBAAgB,EADlB;AAAA,UAAQC,MAAR,qBAAQA,MAAR;AAAA,UAAgBC,aAAhB,qBAAgBA,aAAhB;;AAGA,sBAAiBC,eAAQ,CAACb,KAAK,CAACxC,IAAP,CAAzB;AAAA,UAASsD,IAAT;;AACA,4BAA4BtB,cAAA,CAAoBuB,SAApB,CAA5B;AAAA,UAAOC,MAAP;AAAA,UAAeC,SAAf;;AAKA,UAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,eAClBC,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACG,SAAlB,EAA6Be,SAA7B,CAAuC,UAACC,YAAD;AACrC,cAAMC,aAAa,GAAGZ,MAAM,CAACW,YAAD,CAA5B;;AACA,cAAIC,aAAJ,EAAmB;AACjB,gBAAI,CAACpB,KAAK,CAACG,SAAN,CAAgBgB,YAAhB,EAA8B;AAAEX,cAAAA,MAAM,EAANA,MAAF;AAAUY,cAAAA,aAAa,EAAbA;AAAV,aAA9B,CAAL,EAA+D;AAC7D,qBAAO,IAAP;AACD;AACF,WAJD,MAIO;AACL,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD,SAVD,MAUO,CAAC,CAXU;AAAA,OAApB;;AAaA,UAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAQtBC,QAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAACxC,IAAlB;AAEAoD,QAAAA,aAAa,CAACZ,KAAK,CAACxC,IAAP,EAAauD,SAAb,CAAb;AAED,OAZD;;AAcA,UAAMY,iBAAiB,GAAG,SAApBA,iBAAoB;;;AACxB,YAAIC,qBAAqB,GAAG,WAAAzB,KAAK,UAAL,wCAAOI,UAAP,KAAqB,EAAjD;AACA,YAAMsB,gBAAgB,GAAGV,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACK,YAAlB,CAAzB;;AACA,aAAK,IAAIsB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,gBAAgB,CAACnD,MAA7C,EAAqDoD,KAAK,EAA1D,EAA8D;AAC5D,cAAMR,YAAY,GAAGO,gBAAgB,CAACC,KAAD,CAArC;AACA,cAAMC,iBAAiB,GAAG5B,KAAK,CAACK,YAAN,CAAmBc,YAAnB,CAA1B;;AACA,cAAIS,iBAAJ,EAAuB;AACrB,gBAAMR,aAAa,GAAGZ,MAAM,CAACW,YAAD,CAA5B;AACA,gBAAMU,eAAe,GAAGD,iBAAiB,CAAC;AAAEpB,cAAAA,MAAM,EAANA,MAAF;AAAUY,cAAAA,aAAa,EAAbA;AAAV,aAAD,CAAzC;;AAEA,gBAAIS,eAAJ,EAAqB;AACnBJ,cAAAA,qBAAqB,gBAChBA,qBADgB,EAEhBI,eAFgB,CAArB;AAKAJ,cAAAA,qBAAqB,CAACK,aAAtB,GAAsCC,QAAQ,CAACC,IAAT,CACpClE,aAAa,CAAC+D,eAAD,CADuB,CAAtC;AASD,aAfD;AAsBD;AACF;;AACD,eAAOJ,qBAAP;AACD,OAnCD;;AAqCApC,MAAAA,eAAA,CAAgB;AACd,YAAM4C,QAAQ,GAAGlB,WAAW,EAA5B;;AACA,YAAIkB,QAAJ,EAAc;AAAA;;AAEZ,cAAItB,IAAI,CAACpD,KAAL,KAAeqD,SAAf,IAA4B,YAAAZ,KAAK,UAAL,0CAAOkC,YAAP,MAAwBtB,SAAxD,EAAmE;AACjEH,YAAAA,aAAa,CAACZ,KAAK,CAACxC,IAAP,EAAa2C,KAAK,CAACkC,YAAnB,CAAb;AACD;;AAODpB,UAAAA,SAAS,CAACmB,QAAD,CAAT;AACD,SAZD,MAYO;AACLnB,UAAAA,SAAS,CAACF,SAAD,CAAT;;AACA,cAAID,IAAI,CAACpD,KAAT,EAAgB;AACd8D,YAAAA,eAAe;AAChB;AACF;AACF,OApBD,EAoBG,CAACb,MAAD,CApBH;AA8BA,UAAIK,MAAM,KAAKD,SAAf,EAA0B,OAAO,IAAP;;AAE1B,UAAMR,UAAU;AACd+B,QAAAA,gBAAgB,EAAEnC,KAAK,CAACmC,gBAAN,IAA0B;AAD9B,SAEXX,iBAAiB,EAFN,CAAhB;;AAKA,aAAOnC,mBAAA,CAACY,SAAD;AAAWG,QAAAA,UAAU,EAAEA;SAAgBP,MAAvC,CAAP;AACD,KAhHD;;AAkHA,WAAO,UAACA,KAAD;AAAA,aACLR,aAAA,CAAc;AAAA,eAAMA,mBAAA,CAACiB,gBAAD,oBAAsBT,MAAtB,CAAN;AAAA,OAAd,EAAqD,EAArD,CADK;AAAA,KAAP;AAED,GA5H+B;AAAA,CAAzB;;;;;;;;;"}